/////////////////////////////////////////////////////----------   RECURSION  ------------///////////////////////////////////////////////////////////////////////
#include <bits/stdc++.h>  
int f(int i , int j , vector<vector<int>> &grid){
    //base case
    if(i==0 && j==0) return grid[i][j];
    if(i<0 || j<0) return 1e9;
    
    int up= grid[i][j] + f(i-1 , j , grid);
    int left = grid[i][j] + f(i , j-1 , grid);
    return min(up , left);
}
int minSumPath(vector<vector<int>> &grid) {
    // Write your code here.
    int n=grid.size();
    int m=grid[0].size();
    return f(n-1 , m-1 , grid);
}

/////////////////////////////////////////////////////---------- MEMOIZATION  ------------/////////////////////////////////////////////////////////////////////////




///////////////////////////////////////////////////---------- TABULATION ------------////////////////////////////////////////////////////////////////////////////



///////////////////////////////////////////////////---------- SPACE OPTIMIZATION ------------////////////////////////////////////////////////////////////////////

