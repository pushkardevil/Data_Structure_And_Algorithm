/////////////////////////////////////////////////////----------   RECURSION  ------------///////////////////////////////////////////////////////////////////////
#include <bits/stdc++.h> 
int f(int indx , int target , vector<int> &nums){
    //base case
    if(target == 0) return 1;
    if(indx == 0) return (target == nums[indx]);
    
       
    int ntake=f(indx-1 , target , nums);
    int take=0;
    if(target >= nums[indx]){
        take=f(indx-1 , target-nums[indx] , nums);
    }
    
    return (take + ntake);
}
int findWays(vector<int> &nums, int tar)
{
    // Write your code here.
    int n=nums.size();
    return f(n-1 , tar , nums);
}


/////////////////////////////////////////////////////---------- MEMOIZATION  ------------/////////////////////////////////////////////////////////////////////////




///////////////////////////////////////////////////---------- TABULATION ------------////////////////////////////////////////////////////////////////////////////



///////////////////////////////////////////////////---------- SPACE OPTIMIZATION ------------////////////////////////////////////////////////////////////////////

